import { Vec3Like } from "./vector";
export interface QuaternionLike {
    x: number;
    y: number;
    z: number;
    w: number;
}
export interface QuatSingleton {
    create(x?: number, y?: number, z?: number, w?: number): QuaternionLike;
    copy(q: QuaternionLike): QuatSingleton;
    store(q: QuaternionLike): QuatSingleton;
    /**Generated by ChatGPT then modified to fit API style
     * Calculates this quaternion from radian based euler angles
     */
    fromEuler(euler: Vec3Like): QuatSingleton;
    mul(q: QuaternionLike): QuatSingleton;
}
export declare const quat: {
    q: {
        x: number;
        y: number;
        z: number;
        w: number;
    };
    create(x?: number, y?: number, z?: number, w?: number): QuaternionLike;
    copy(q: QuaternionLike): QuatSingleton;
    store(q: QuaternionLike): QuatSingleton;
    /**Generated by ChatGPT then modified to fit API style
     * Calculates this quaternion from radian based euler angles
     */
    fromEuler(euler: Vec3Like): QuatSingleton;
    mul(q: QuaternionLike): QuatSingleton;
};
